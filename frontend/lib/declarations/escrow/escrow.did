type Account = record { owner: principal; subaccount: opt blob };

type EscrowStatus = variant {
  created;
  funded;
  released;
  refunded;
};

type Escrow = record {
  projectId: text;
  client: principal;
  freelancer: principal;
  expectedE8s: nat;
  status: EscrowStatus;
  subaccount: blob;
  createdAtNs: nat64;
  fundedAtNs: opt nat64;
  releaseAtNs: opt nat64;
  ledgerBlockIndex: opt nat64;
};

type RefreshResult = record {
  funded: bool;
  balanceE8s: nat;
};

type TransferResult = variant {
  ok: nat;
  err: text;
};

service : {
  create: (text, principal, principal, nat) -> (text, Account);
  get: (text) -> (Escrow);
  get_deposit_account: (text) -> (Account);
  refresh_funding: (text) -> (RefreshResult);
  release: (text) -> (TransferResult);
  refund: (text) -> (TransferResult);
  set_treasury: (principal) -> ();
  set_relayer: (opt principal) -> ();
  get_treasury: () -> (principal);
  get_relayer: () -> (opt principal);
}
